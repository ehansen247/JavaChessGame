#BlueJ class context
comment0.params=color1\ color2
comment0.target=Chess(java.lang.String,\ java.lang.String)
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment1.text=\n\ Begins\ the\ chess\ game.\ Asks\ for\ the\ user\ input\ of\ color.\n
comment10.params=hasBlackKingMoved
comment10.target=void\ setHasBlackKingMoved(boolean)
comment10.text=\n\ Sets\ whether\ or\ not\ black\ king\ has\ moved\n\n\ @param\ hasBlackKingMoved\ whether\ or\ not\ black\ king\ has\ moved\n
comment11.params=
comment11.target=boolean\ isHasBlackKingSideRookMoved()
comment11.text=\n\ Returns\ true\ if\ the\ black\ king-side\ rook\ has\ moved.\ Returns\ false\ otherwise.\n\n\ @return\ Returns\ true\ if\ the\ black\ king-side\ rook\ has\ moved.\ Returns\ false\ otherwise.\n
comment12.params=hasBlackKingSideRookMoved
comment12.target=void\ setHasBlackKingSideRookMoved(boolean)
comment12.text=\n\ sets\ whether\ or\ not\ the\ black\ king\ side\ rook\ has\ moved\n\n\ @param\ hasBlackKingSideRookMoved\ whether\ or\ not\ black\ king\ side\ rook\ has\ moved\n
comment13.params=
comment13.target=boolean\ isHasBlackQueenSideRookMoved()
comment13.text=\n\ Returns\ true\ if\ the\ black\ queen-side\ rook\ has\ moved.\ Returns\ false\ otherwise.\n\n\ @return\ Returns\ true\ if\ the\ black\ queen-side\ rook\ has\ moved.\ Returns\ false\ otherwise.\n
comment14.params=hasBlackQueenSideRookMoved
comment14.target=void\ setHasBlackQueenSideRookMoved(boolean)
comment14.text=\n\ sets\ whether\ or\ not\ the\ black\ queen\ side\ rook\ has\ moved\n\n\ @param\ hasBlackQueenSideRookMoved\ whether\ or\ not\ the\ black\ queen\ side\ rook\ has\ moved\n
comment15.params=
comment15.target=boolean\ isHasWhiteKingMoved()
comment15.text=\n\ Returns\ true\ if\ the\ white\ king\ has\ moved.\ Returns\ false\ otherwise.\n\n\ @return\ Returns\ true\ if\ the\ white\ king\ has\ moved.\ Returns\ false\ otherwise.\n
comment16.params=hasWhiteKingMoved
comment16.target=void\ setHasWhiteKingMoved(boolean)
comment16.text=\n\ sets\ whether\ or\ not\ the\ white\ king\ has\ moved\n\n\ @param\ hasWhiteKingMoved\ whether\ or\ not\ the\ white\ king\ has\ moved\n
comment17.params=
comment17.target=boolean\ isHasWhiteKingSideRookMoved()
comment17.text=\n\ Returns\ true\ if\ the\ white\ king-side\ rook\ has\ moved.\ Returns\ false\ otherwise.\n\n\ @return\ Returns\ true\ if\ the\ white\ king-side\ rook\ has\ moved.\ Returns\ false\ otherwise.\n
comment18.params=hasWhiteKingSideRookMoved
comment18.target=void\ setHasWhiteKingSideRookMoved(boolean)
comment18.text=\n\ Sets\ whether\ or\ not\ the\ white\ king\ side\ rook\ has\ moved\n\n\ @param\ hasWhiteKingSideRookMoved\ whether\ or\ not\ the\ white\ king\ side\ rook\ has\ moved\n
comment19.params=
comment19.target=boolean\ isHasWhiteQueenSideRookMoved()
comment19.text=\n\ Returns\ true\ if\ the\ white\ queen-side\ rook\ has\ moved.\ Returns\ false\ otherwise.\n\n\ @return\ Returns\ true\ if\ the\ white\ queen-side\ rook\ has\ moved.\ Returns\ false\ otherwise.\n
comment2.params=
comment2.target=java.util.Map\ getConditionalRange()
comment2.text=\n\ Gets\ amd\ returns\ a\ specific\ special\ moves-only\ range\ mainly\ for\ en\ passant\n\ \n\ @return\ returns\ a\ specific\ special\ moves-only\ range\ mainly\ for\ en\ passant\n
comment20.params=hasWhiteQueenSideRookMoved
comment20.target=void\ setHasWhiteQueenSideRookMoved(boolean)
comment20.text=\n\ Sets\ whether\ or\ not\ the\ white\ queen\ side\ rook\ has\ moved\n\n\ @param\ hasWhiteQueenSideRookMoved\ whether\ or\ not\ the\ white\ queen\ side\ rook\ has\ moved\n
comment21.params=
comment21.target=void\ updateCheck()
comment21.text=\n\ Updates\ the\ state\ of\ Check\ for\ Black\ and\ White\n
comment22.params=
comment22.target=Board\ getBoard()
comment22.text=\n\ s\n\ Gets\ and\ returns\ the\ Chess\ board\n\n\ @return\ returns\ the\ Chess\ board\n
comment23.params=
comment23.target=boolean\ isBlackInCheck()
comment23.text=\n\ Gets\ and\ returns\ whether\ or\ not\ black\ is\ in\ check\n\n\ @return\ returns\ whether\ or\ not\ black\ is\ in\ check\n
comment24.params=blackInCheck
comment24.target=void\ setBlackInCheck(boolean)
comment24.text=\n\ Sets\ whether\ or\ not\ black\ is\ in\ check\n\n\ @param\ blackInCheck\ whether\ or\ not\ black\ is\ in\ check\n
comment25.params=
comment25.target=boolean\ isWhiteInCheck()
comment25.text=\n\ Gets\ and\ returns\ whether\ or\ not\ white\ is\ in\ check\n\n\ @return\ returns\ whether\ or\ not\ white\ is\ in\ check\n
comment26.params=whiteInCheck
comment26.target=void\ setWhiteInCheck(boolean)
comment26.text=\n\ Sets\ whether\ or\ not\ white\ is\ in\ check\n\n\ @param\ whiteInCheck\ whether\ or\ not\ white\ is\ in\ check\n
comment27.params=startPiece\ endSquare
comment27.target=void\ turn(Piece,\ Square)
comment27.text=\n\ Processes\ a\ turn.\ If\ the\ start\ piece\ and\ end\ square\ constitute\ a\ valid\ move,\ taking\ check\ and\ the\ range\ of\ <br>\n\ the\ piece\ into\ account,\ completes\ the\ move\ and\ updates\ the\ board\ squares\ and\ pieces.\ Otherwise,\ restarts\ <br>\n\ the\ players\ turn,\ keeps\ the\ board\ the\ same,\ and\ tells\ the\ player\ the\ move\ was\ invalid.\ <br>\n\ If\ checkmate\ is\ reached,\ prints\ out\ which\ side\ won.\n\n\ @param\ startPiece\ The\ start\ piece\ that\ the\ player\ wants\ to\ move.\n\ @param\ endSquare\ \ The\ end\ square\ that\ the\ player\ wants\ to\ move\ the\ piece\ to.\n
comment28.params=
comment28.target=gamePGN\ getPgn()
comment29.params=
comment29.target=void\ decrementCurrentTurn()
comment3.params=str
comment3.target=boolean\ digitChecker(java.lang.String)
comment3.text=\n\ @return\ True\ if\ all\ characters\ are\ digits\n
comment30.params=
comment30.target=void\ incrementCurrentTurn()
comment31.params=
comment31.target=void\ resetConditionalRange()
comment32.params=
comment32.target=Canvas\ getCanvas()
comment33.params=
comment33.target=java.lang.String\ getTurnColor()
comment33.text=\n\ Returns\ the\ color\ of\ the\ player\ whose\ turn\ it\ is.\n\n\ @return\ The\ color\ of\ the\ player\ whose\ turn\ it\ is.\n
comment4.params=king\ rook
comment4.target=boolean\ castle(Piece,\ Piece)
comment4.text=\ \n\ Castles\ the\ King\ and\ the\ Rook\n
comment5.params=startPiece\ endSquare
comment5.target=void\ move(Piece,\ Square)
comment6.params=
comment6.target=double\ getCurrentTurn()
comment6.text=\n\ gets\ and\ returns\ the\ current\ turn\n\n\ @return\ returns\ the\ current\ Turn\n
comment7.params=
comment7.target=boolean\ isGameOver()
comment7.text=\n\ If\ the\ game\ has\ ended,\ returns\ true.\ If\ the\ game\ is\ not\ over,\ returns\ false.\n\n\ @return\ If\ the\ game\ has\ ended,\ returns\ true.\ If\ the\ game\ is\ not\ over,\ returns\ false.\n
comment8.params=gameOver
comment8.target=void\ setGameOver(boolean)
comment8.text=\n\ Sets\ the\ current\ game\ state\n\n\ @param\ gameOver\ the\ current\ game\ state\n
comment9.params=
comment9.target=boolean\ isHasBlackKingMoved()
comment9.text=\n\ Returns\ true\ if\ the\ black\ king\ has\ moved.\ Returns\ false\ otherwise.\n\n\ @return\ Returns\ true\ if\ the\ black\ king\ has\ moved.\ Returns\ false\ otherwise.\n
numComments=34
